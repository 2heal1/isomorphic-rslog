// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`color and formatting > should handle emoji in gradient text 1`] = `
[
  [
    "[1m[36mHello 👋 World 🌍[39m[22m",
  ],
]
`;

exports[`color and formatting > should handle gradient text with spaces and newlines 1`] = `
[
  [
    "[1m[36mHello
World with spaces[39m[22m",
  ],
]
`;

exports[`color and formatting > should handle multiple nested styles 1`] = `
[
  [
    "[1m[36minfo   [39m[22m [1m[31mbold red[39m[22m text",
  ],
]
`;

exports[`color and formatting > should handle nested color formatting 1`] = `
[
  [
    "[1m[36minfo   [39m[22m [31mred[39m and [32mgreen[39m text",
  ],
]
`;

exports[`error handling > should handle errors with no stack trace 1`] = `
[
  [
    "[1m[31merror  [39m[22m [object Object]",
  ],
]
`;

exports[`label formatting > should handle empty labels 1`] = `
[
  [
    "[1m[36minfo   [39m[22m message",
  ],
  [
    "[1m[33mwarn   [39m[22m message",
  ],
  [
    "[1m[31merror  [39m[22m message",
  ],
]
`;

exports[`label formatting > should handle very long labels 1`] = `
[
  [
    "[1m[36mVeryLongLabelThatExceedsNormalLength[39m[22m message",
  ],
  [
    "[1m[33mAnotherVeryLongLabel[39m[22m message",
  ],
]
`;

exports[`logger > should create new logger with info level correctly 1`] = `
[
  [
    "[1m[31merror  [39m[22m this is a error message",
  ],
  [
    "[1m[36minfo   [39m[22m this is an info message",
  ],
  [
    "[1m[33mwarn   [39m[22m this is a warn message",
  ],
  [
    "[1m[32mready  [39m[22m this is a ready message",
  ],
  [
    "[1m[32msuccess[39m[22m this is a success message",
  ],
]
`;

exports[`logger > should create new logger with warn level correctly 1`] = `
[
  [
    "[1m[31merror  [39m[22m this is a error message",
  ],
  [
    "[1m[33mwarn   [39m[22m this is a warn message",
  ],
]
`;

exports[`logger > should handle empty and undefined messages 1`] = `
[
  [],
  [
    "[1m[33mwarn   [39m[22m ",
  ],
  [],
]
`;

exports[`logger > should handle multiple arguments in log messages 1`] = `
[
  [
    "[1m[36minfo   [39m[22m Message with",
    "multiple",
    "arguments",
  ],
  [
    "[1m[33mwarn   [39m[22m Warning with",
    {
      "object": "value",
    },
  ],
  [
    "[1m[31merror  [39m[22m Error with",
    123,
    true,
  ],
]
`;

exports[`logger > should handle multiple logger instances independently 1`] = `
[
  [
    "[1m[36minfo   [39m[22m Info from logger1",
  ],
  [
    "[1m[33mwarn   [39m[22m Warning from logger2",
  ],
]
`;

exports[`logger > should handle non-string messages 1`] = `
[
  [
    "[1m[36minfo   [39m[22m 123",
  ],
  [
    "[1m[33mwarn   [39m[22m true",
  ],
  [
    "[1m[31merror  [39m[22m [object Object]",
  ],
]
`;

exports[`logger > should handle start method correctly 1`] = `
[
  [
    "[1m[36mstart  [39m[22m Starting process",
  ],
  [
    "[1m[36mstart  [39m[22m Starting with",
    "multiple",
    "arguments",
  ],
]
`;

exports[`logger > should log as expected 1`] = `
[
  [
    "[1m[36m😊 Rslog v1.0.0
[39m[22m",
  ],
  [
    "this is a log message",
  ],
  [
    "[1m[36minfo   [39m[22m this is an info message",
  ],
  [
    "[1m[33mwarn   [39m[22m this is a warn message",
  ],
  [
    "[1m[32mready  [39m[22m this is a ready message",
  ],
  [
    "[1m[32msuccess[39m[22m this is a success message",
  ],
]
`;

exports[`logger > use custom labels if the value is passed 1`] = `
[
  [
    "[1m[36m[ Prefix ] Info[39m[22m this is an info message",
  ],
  [
    "[1m[33m[ Prefix ] Warn[39m[22m this is a warn message",
  ],
  [
    "[1m[32m[ Prefix ] Ready[39m[22m this is a ready message",
  ],
  [
    "[1m[32m[ Prefix ] Success[39m[22m this is a success message",
  ],
]
`;
